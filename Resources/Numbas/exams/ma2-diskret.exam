// Numbas version: custom_script_order
{"name": "Ma2_diskret", "duration": 0, "metadata": {"notes": "", "description": "<p>Discrete mathematics mid-term assessment.</p>", "licence": "None specified"}, "allQuestions": true, "shuffleQuestions": false, "extensions": [], "questions": [{"functions": {}, "name": "Algebra: Simplifying Indices 2", "tags": [], "type": "question", "advice": "<p>The Laws of Indices state:</p>\n<div class=\"bs-content-rb-keyfact\" style=\"margin: 0px 0px 10px; padding: 10px 10px 1px; clear: both; color: #db5902; font-weight: bold; font-family: verdana, helvetica, arial, sans-serif; font-size: 13px; line-height: 18.636798858642578px; background-color: #fbf49c;\">\n<h3 style=\"margin: 0px 0px 0.5em; padding: 0px; text-align: center;\">When multiplying you add the indices, and when dividing you subtract the indices.</h3>\n</div>\n<p style=\"margin: 0px 0px 0.5em; padding: 0px; font-size: 13px; color: #333333; font-family: verdana, helvetica, arial, sans-serif; line-height: 18.636798858642578px;\">So it follows that:</p>\n<p style=\"margin: 0px 0px 0.5em; padding: 0px; font-size: 13px; color: #333333; font-family: verdana, helvetica, arial, sans-serif; line-height: 18.636798858642578px;\">p<sup style=\"line-height: 2; font-size: 0.85em;\">3</sup>&nbsp;&times; p<sup style=\"line-height: 2; font-size: 0.85em;\">7</sup>&nbsp;= p<sup style=\"line-height: 2; font-size: 0.85em;\">10</sup>, and s<sup style=\"line-height: 2; font-size: 0.85em;\">5</sup>&nbsp;&divide; s<sup style=\"line-height: 2; font-size: 0.85em;\">3</sup>&nbsp;= s<sup style=\"line-height: 2; font-size: 0.85em;\">2</sup></p>\n<p style=\"margin: 0px 0px 0.5em; padding: 0px; font-size: 13px; color: #333333; font-family: verdana, helvetica, arial, sans-serif; line-height: 18.636798858642578px;\">For the expression:</p>\n<p style=\"margin: 0px 0px 0.5em; padding: 0px; font-size: 13px; color: #333333; font-family: verdana, helvetica, arial, sans-serif; line-height: 18.636798858642578px;\">4s<sup style=\"line-height: 2; font-size: 0.85em;\">3</sup>&nbsp;x 3s<sup style=\"line-height: 2; font-size: 0.85em;\">2</sup></p>\n<p style=\"margin: 0px 0px 0.5em; padding: 0px; font-size: 13px; color: #333333; font-family: verdana, helvetica, arial, sans-serif; line-height: 18.636798858642578px;\">The numbers in front of the variables follow the usual rules of multiplication and division, but index numbers follow the rules of indices. So we multiply 4 and 3 and add 3 and 2</p>\n<p style=\"margin: 0px 0px 0.5em; padding: 0px; font-size: 13px; color: #333333; font-family: verdana, helvetica, arial, sans-serif; line-height: 18.636798858642578px;\">4s<sup style=\"line-height: 2; font-size: 0.85em;\">3</sup>&nbsp;&times; 3s<sup style=\"line-height: 2; font-size: 0.85em;\">2</sup>&nbsp;= 12s<sup style=\"line-height: 2; font-size: 0.85em;\">5</sup></p>\n<p style=\"margin: 0px 0px 0.5em; padding: 0px; font-size: 13px; color: #333333; font-family: verdana, helvetica, arial, sans-serif; line-height: 18.636798858642578px;\"></p>\n<p style=\"margin: 0px 0px 0.5em; padding: 0px; font-size: 13px; color: #333333; font-family: verdana, helvetica, arial, sans-serif; line-height: 18.636798858642578px;\"></p>\n<p style=\"text-align: center;\"><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/tdO4UOLW9d8?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe></p>", "rulesets": {}, "parts": [{"vsetrangepoints": 5, "prompt": "<p>$\\dfrac{\\var{a}x^\\var{b}y^\\var{c}z^\\var{d}}{\\var{k}x^\\var{f}y^\\var{g}z^\\var{h}}$</p>\n<p>Do not use negative powers in your answer.</p>", "expectedvariablenames": [], "checkingaccuracy": 0.001, "vsetrange": [0, 1], "showpreview": true, "notallowed": {"message": "<p>Do not use negative powers in your answer.</p>", "showStrings": false, "strings": ["-"], "partialCredit": 0}, "showCorrectAnswer": true, "answersimplification": "all, fractionNumbers", "scripts": {}, "answer": "{a/k}*(y^{c-g}/(x^{f-b}*z^{h-d}))", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "type": "jme"}], "extensions": [], "statement": "<p>Simplifying the following using the laws of indices:</p>", "variable_groups": [], "progress": "in-progress", "preamble": {"css": "", "js": ""}, "variables": {"a": {"definition": "random (2..9 except [0,1])", "templateType": "anything", "group": "Ungrouped variables", "name": "a", "description": ""}, "c": {"definition": "g+random(1..4 except[-g,-g+1])", "templateType": "anything", "group": "Ungrouped variables", "name": "c", "description": ""}, "b": {"definition": "random (-3..4 except[0,1])", "templateType": "anything", "group": "Ungrouped variables", "name": "b", "description": ""}, "d": {"definition": "random (-3..4 except [0,1])", "templateType": "anything", "group": "Ungrouped variables", "name": "d", "description": ""}, "g": {"definition": "random (-3..4 except [0,1])", "templateType": "anything", "group": "Ungrouped variables", "name": "g", "description": ""}, "f": {"definition": "b+random(1..4 except [-b,-b+1])", "templateType": "anything", "group": "Ungrouped variables", "name": "f", "description": ""}, "h": {"definition": "d+random(1..4 except[-d,-d+1])", "templateType": "anything", "group": "Ungrouped variables", "name": "h", "description": ""}, "k": {"definition": "random (2..9 except a)", "templateType": "anything", "group": "Ungrouped variables", "name": "k", "description": ""}}, "metadata": {"notes": "<p>Original by me.</p>\n<p>Edited by Bill Foster to add the following refinements:</p>\n<p>Does not allow the use of negative exponents by ruling out the use of the minus sign in the Accuracy and string restrictions section of the Part.</p>\n<p>Also, because we want the display to be controlled so that it does not use negative exponents the range of values of the variables has been set so that the answer is of the form $\\displaystyle \\frac {ay^b}{cx^dz^f}$where $b,d,f$ are all $&gt;0$.</p>\n<p>If you wanted to have other types of answer then the variables have to be set accordingly.</p>", "description": "<p>Simplifying using the laws of indices.</p>"}}, {"functions": {}, "name": "Arithmetic Progression 03", "tags": [], "preamble": {"css": "", "js": ""}, "advice": "", "rulesets": {}, "parts": [{"prompt": "<p>In an arithmetric progression, the first term is &nbsp;${\\var{a1}} $ &nbsp;and the &nbsp;$\\var{n1}th$ term is &nbsp;$\\var{un}$.</p>\n<p>Find:</p>\n<p>i) the common difference &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [[0]]</p>\n<p>ii) the sum of the first $\\var{n12}$ terms &nbsp; &nbsp; &nbsp; [[1]]</p>", "marks": 0, "gaps": [{"expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "answer": "{d1}", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}, {"expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "answer": "{s12}", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "type": "gapfill"}, {"prompt": "<p>In an arithmetric progression, the $\\var{n21}th $ term is $\\var{u21}$ and the $\\var{n22}th$ term is $ \\var{u22}$.</p>\n<p>Find:</p>\n<p>i) the first term &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[[0]]</p>\n<p>ii) the common difference. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[[1]]</p>\n<p>iii) the sum of the first $\\var{n2}$ terms &nbsp; &nbsp; &nbsp; [[2]]</p>", "marks": 0, "gaps": [{"expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "answer": "{a2}", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}, {"expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "answer": "{d2}", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}, {"expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "answer": "{s2}", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "type": "gapfill"}, {"prompt": "<p>An arithmetric series has first term $\\var{a3}$ &nbsp;and common difference $\\var{d3}$.</p>\n<p>Given that the sum of the first <em>n</em> terms of the series is $\\var{s3}$</p>\n<p>find the value of <em>n</em>.</p>\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;n = [[0]]</p>", "marks": 0, "gaps": [{"expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "answer": "{n3}", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "type": "gapfill"}], "extensions": [], "statement": "", "variable_groups": [], "progress": "in-progress", "type": "question", "variables": {"n12": {"definition": "random(12..32#2)", "templateType": "anything", "group": "Ungrouped variables", "name": "n12", "description": ""}, "s3": {"definition": "n3*(2*a3+(n3-1)*d3)/2", "templateType": "anything", "group": "Ungrouped variables", "name": "s3", "description": ""}, "s2": {"definition": "n2*(2*a2+(n2-1)*d2)/2", "templateType": "anything", "group": "Ungrouped variables", "name": "s2", "description": ""}, "n21": {"definition": "random(4..10)", "templateType": "anything", "group": "Ungrouped variables", "name": "n21", "description": ""}, "n1": {"definition": "random(13..28 except[21,22,23,31,32,33])", "templateType": "anything", "group": "Ungrouped variables", "name": "n1", "description": ""}, "un": {"definition": "a1+(n1-1)*d1", "templateType": "anything", "group": "Ungrouped variables", "name": "un", "description": ""}, "a1": {"definition": "random(-10..30)", "templateType": "anything", "group": "Ungrouped variables", "name": "a1", "description": ""}, "a3": {"definition": "random(-6..50 except 0)", "templateType": "anything", "group": "Ungrouped variables", "name": "a3", "description": ""}, "a2": {"definition": "random(-10..30 except a1)", "templateType": "anything", "group": "Ungrouped variables", "name": "a2", "description": ""}, "u21": {"definition": "a2+(n21-1)*d2", "templateType": "anything", "group": "Ungrouped variables", "name": "u21", "description": ""}, "u22": {"definition": "a2+(n22-1)*d2", "templateType": "anything", "group": "Ungrouped variables", "name": "u22", "description": ""}, "s12": {"definition": "n12*(2*a1+(n12-1)*d1)/2", "templateType": "anything", "group": "Ungrouped variables", "name": "s12", "description": ""}, "n22": {"definition": "random(13..27 except[21,22,23])", "templateType": "anything", "group": "Ungrouped variables", "name": "n22", "description": ""}, "n2": {"definition": "random(16..36)", "templateType": "anything", "group": "Ungrouped variables", "name": "n2", "description": ""}, "n3": {"definition": "random(9..21)", "templateType": "anything", "group": "Ungrouped variables", "name": "n3", "description": ""}, "d2": {"definition": "random(-12..24 except[-2,-1,0,1,2,d1])", "templateType": "anything", "group": "Ungrouped variables", "name": "d2", "description": ""}, "d3": {"definition": "random(-6..24 except[0,-1,1])   ", "templateType": "anything", "group": "Ungrouped variables", "name": "d3", "description": ""}, "d1": {"definition": "random(-12..24 except[-2,-1,0,1,2])", "templateType": "anything", "group": "Ungrouped variables", "name": "d1", "description": ""}}, "metadata": {"notes": "", "description": ""}}, {"functions": {"markmatrix": {"definition": "//Sets up the marking matrix for each of the numbers in the list l\n      //The marking matrix is of the form [mark list for choice1,....,mark list for choice8]\n      map([isdivby(40,l[x]),isdivby(l[x],5),isprime(l[x]),noneof(l[x])],x,0..7)", "type": "matrix", "parameters": [["l", "list"]], "language": "jme"}, "noneof": {"definition": "//None of the above answer, is 1 if all others are 0.\n      if(isdivby(40,n)=0 and isdivby(n,5)=0 and isprime(n)=0,1,0)", "type": "number", "parameters": [["n", "number"]], "language": "jme"}, "isprime": {"definition": "//check to see if prime for numbers less than 40. Note that this gives a mark of 1 or 0\n      switch(n=2 or n=3 or n=5,1,2|n,0,3|n,0,5|n,0,1)", "type": "number", "parameters": [["n", "number"]], "language": "jme"}, "isdivby": {"definition": "//see if m divides n. Gives a mark of 1 or 0.\n      if(m|n,1,0)", "type": "number", "parameters": [["n", "number"], ["m", "number"]], "language": "jme"}}, "ungrouped_variables": ["ch", "markingmatrix"], "name": "Blathnaid's copy of Bill's copy of Factors, multiples, prime numbers", "tags": [], "type": "question", "advice": "", "rulesets": {}, "parts": [{"maxAnswers": 0, "matrix": "markingmatrix", "shuffleAnswers": false, "minAnswers": 0, "shuffleChoices": false, "answers": ["Factor of 40", "Multiple of 5", "Prime", "None of these"], "warningType": "none", "displayType": "radiogroup", "showCorrectAnswer": false, "scripts": {}, "marks": 0, "maxMarks": 0, "choices": ["{ch[0]}", "{ch[1]}", "{ch[2]}", "{ch[3]}", "{ch[4]}", "{ch[5]}", "{ch[6]}", "{ch[7]}"], "type": "m_n_x", "minMarks": 0}], "statement": "<p>Identify whether each of the following numbers is:</p>\n  <ul>\n  <li>a factor of 40;</li>\n  <li>a multiple of 5;</li>\n  <li>prime; or</li>\n  <li>none of the above</li>\n  </ul>\n  <p></p>\n  <p></p>", "variable_groups": [], "variablesTest": {"maxRuns": 100, "condition": ""}, "preamble": {"css": "", "js": ""}, "variables": {"ch": {"definition": "//This gives 8 random choices from 2 to 40\n    shuffle(map(x,x,2..40))[0..8]", "templateType": "anything", "group": "Ungrouped variables", "name": "ch", "description": ""}, "markingmatrix": {"definition": "//This gives the marking matrix for the multiple response question based upon the choices of \n    //eight numbers bwtween 2 and 40.\n    markmatrix(ch)", "templateType": "anything", "group": "Ungrouped variables", "name": "markingmatrix", "description": ""}}, "metadata": {"notes": "", "description": "", "licence": "Creative Commons Attribution 4.0 International"}}, {"functions": {}, "ungrouped_variables": ["a", "c", "b"], "name": "Blathnaid's copy of Composition of Functions (S1Q3)", "tags": [], "type": "question", "advice": "", "rulesets": {}, "parts": [{"prompt": "<p>What is $f\\circ g$?</p>", "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": false, "scripts": {}, "marks": 1, "answer": "{a}({b}x+{c})({b}x+{c})-({b}x+{c})", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}, {"prompt": "<p>What is $g\\circ f$?</p>", "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "answer": "{b}({a}x^2-x)+{c}", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}], "statement": "<p>$f(x) = \\var{a}x^2 - x, \\text{ &nbsp; &nbsp;} g(x) = \\var{b}x+ \\var{c}$</p>", "variable_groups": [], "variablesTest": {"maxRuns": 100, "condition": ""}, "preamble": {"css": "", "js": ""}, "variables": {"a": {"definition": "random(2..9)", "templateType": "anything", "group": "Ungrouped variables", "name": "a", "description": ""}, "c": {"definition": "random(2..9 except b)", "templateType": "anything", "group": "Ungrouped variables", "name": "c", "description": ""}, "b": {"definition": "random(2..9)", "templateType": "anything", "group": "Ungrouped variables", "name": "b", "description": ""}}, "metadata": {"notes": "", "description": "", "licence": "None specified"}}, {"functions": {"extendedgcd1": {"definition": "// x in a*x + b*y = gcd(a,b)\nif((a|b) or (b|a),\n0\n,\nextendedgcd2(b,mod(a,b))\n)", "type": "number", "parameters": [["a", "number"], ["b", "number"]], "language": "jme"}, "describebezout": {"definition": "// describe the steps of Euclid's algorithm, to solve a*x+b*y = gcd(a,b)\nvar tex = '\\\\begin{align}\\n';\n\nvar as = [];\nvar bs = [];\nvar qs = [];\nvar q,r,old_r;\nwhile(r=a%b) {\n  q=(a-r)/b;\n  as.push(a);\n  bs.push(b);\n  qs.push(q);\n  a=b;\n  b=r;\n  old_r=r;\n}\nvar lines = [];\nvar s=0,t=1,tmp;\nwhile(qs.length) {\n  q = qs.pop();\n  a = as.pop();\n  b = bs.pop();\n  tmp = s;\n  s = t;\n  t = tmp - q*t;\n  var expr = '('+s+')*('+a+') + ('+t+')*('+b+')';\n  expr = Numbas.jme.display.exprToLaTeX(expr,['basic'],scope);\n  lines.push(old_r+' &= '+expr);\n  old_r = '';\n}\ntex = '\\\\begin{align}\\n'+lines.join(' \\\\\\\\\\n')+'\\n\\\\end{align}';\nreturn $('<p>').text(tex);", "type": "html", "parameters": [["a", "number"], ["b", "number"]], "language": "javascript"}, "extendedgcd2": {"definition": "// y in a*x + b*y = gcd(a,b)\nif((a|b) or (b|a),\n1\n,\nextendedgcd1(b,mod(a,b))-(extendedgcd2(b,mod(a,b))*floor(a/b))\n)", "type": "number", "parameters": [["a", "number"], ["b", "number"]], "language": "jme"}, "describegcd": {"definition": "// describe the steps of the Euclidean algorithm\nvar table = $('<table>');\nwhile(a%b!=0) {\n  if(a<b) {\n    table.append('<tr><td style=\"text-align:left;\"> First of all, the biggest number needs to go first: </td><td> $\\\\operatorname{gcd}(\\\\var{'+a+'},\\\\var{'+b+'}) = \\\\operatorname{gcd}(\\\\var{'+b+'},\\\\var{'+a+'}), $ </td></tr>');\n    var t = a;\n    a = b;\n    b = t;\n  } else {\n    table.append('<tr><td style=\"text-align:left;\"> Divide $\\\\var{'+a+'}$ by $\\\\var{'+b+'}$ with remainder $\\\\var{'+(a%b)+'}$: </td><td> $\\\\var{'+a+'} = \\\\var{'+b+'} \\\\times \\\\var{'+Math.floor(a/b)+'} + \\\\var{'+(a%b)+'},$ </td></tr>');\n    var t = a;\n    a = b\n    b = t%b;\n  }\n}\ntable.append('<tr><td style=\"text-align:left;\"> Finally, $\\\\var{'+b+'}$ divides into $\\\\var{'+a+'}$ exactly $\\\\var{'+a/b+'}$ times: </td><td> $\\\\var{'+a+'} = \\\\var{'+b+'} \\\\times \\\\var{'+a/b+'}.$ </td></tr>');\nreturn table;", "type": "html", "parameters": [["a", "number"], ["b", "number"]], "language": "javascript"}, "long_gcd": {"definition": "// return a pair of numbers (x,y) with gcd(x,y)=b, and the euclidean algorithm takes <lines> steps to get to this point\nif(lines<=0,\n  [a,b],\n  let(m,random(2..10),\n    long_gcd(a*m+b,a,lines-1)\n  )\n)", "type": "list", "parameters": [["a", "number"], ["b", "number"], ["lines", "number"]], "language": "jme"}}, "ungrouped_variables": [], "name": "Blathnaid's copy of Use Euclid's algorithm to solve $as + bt = \\gcd(a,b)$, ", "tags": ["checked2015", "euclidean algorithm", "gcd", "greatest common divisor", "MAS1702", "MAS2213", "number theory", "Number theory"], "advice": "<h4>a)</h4>\n<p>On applying the standard method for finding the $\\operatorname{gcd}$ of two numbers we have the following sequence of operations:</p>\n<p>{describegcd(a,b)}</p>\n<p>The last non-zero remainder is $\\var{d}$, so this is the $\\operatorname{gcd}$ of $\\var{a}$ and $\\var{b}$.</p>\n<h4>b)</h4>\n<p>Now work backwards through those steps, rearranging them to find the remainders as linear combinations of the other numbers.</p>\n<p>When you reach the last line you will have found $s_1$ and $t_1$ such that</p>\n<p>\\[\\var{a}s_1+\\var{b}t_1= \\var{d}\\]</p>\n<p>In this case we find:</p>\n<p>{describebezout(a,b)}</p>\n<p>So we obtain values $s_1 = \\var{s}$ and $t_1 = \\var{t}$.</p>\n<div data-jme-visible=\"multiple=0\">\n<p>We see that $0 \\le s_1 \\le \\var{show_diff-1}$ and so meets our requirement and we have $s=\\var{s}$, $t=\\var{t}$.</p>\n</div>\n<div data-jme-visible=\"multiple=1\">\n<p>We see that $s_1$ does not meet the requirement that $0 \\le s_1 \\le \\var{show_diff-1}$.</p>\n<p>Note that if $(s,t)$ is a solution to $\\simplify{{a}s + {b}t = {d}}$, then $(\\simplify[]{s + lambda*({b}/{d})}, \\simplify[]{t + lambda*({-a}/{d})})$ is also a solution.</p>\n<p>So we have to add a multiple of $\\frac{\\var{b}}{\\var{d}}=\\var{b/d}$ to $s_1$ and the same multiple of $-\\frac{\\var{a}}{\\var{d}} = -\\var{a/d}$ to $t_1$.</p>\n<p>We see that the multiple is $\\var{multiple}$ and we have:</p>\n<p>\\begin{align} <br/>s =\\var{s} + \\var{multiple}\\times \\var{b/d} &amp;= \\var{sval}, \\\\<br/> t =\\var{t} - \\var{multiple}\\times \\var{a/d} &amp;= \\var{tval}.<br/>\\end{align}</p>\n</div>", "rulesets": {}, "parts": [{"prompt": "<p>Find $d = \\operatorname{gcd}(\\var{a},\\var{b})$, the greatest common divisor of $\\var{a}$ and $\\var{b}$:</p>\n<p>$d = $&nbsp;[[0]]</p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "gaps": [{"allowFractions": false, "variableReplacements": [], "maxValue": "d", "minValue": "d", "variableReplacementStrategy": "originalfirst", "correctAnswerFraction": false, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "type": "numberentry"}], "showCorrectAnswer": true, "scripts": {}, "marks": 0, "type": "gapfill"}, {"stepsPenalty": 0, "prompt": "<p>Now find integers $s$ and $t$ such that $0 \\le s \\le \\var{show_diff-1}$ and</p>\n<p>\\[\\var{a}s+\\var{b}t = d\\]</p>\n<p>$s = $&nbsp;[[0]]</p>\n<p>$t = $&nbsp;[[1]]</p>\n<p>Click on <em>Show steps</em> for more information on the possible solutions for $s$ and $t$.</p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "gaps": [{"allowFractions": false, "variableReplacements": [], "maxValue": "sval", "minValue": "sval", "variableReplacementStrategy": "originalfirst", "correctAnswerFraction": false, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "type": "numberentry"}, {"allowFractions": false, "variableReplacements": [], "maxValue": "tval", "minValue": "tval", "variableReplacementStrategy": "originalfirst", "correctAnswerFraction": false, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "type": "numberentry"}], "steps": [{"prompt": "<p>If you find $s_1$ and $t_1$ such that $\\var{a}s_1+\\var{b}t_1=d$ but $s_1$ does not satisfy $0 \\le s_1 \\le \\var{show_diff-1}$ then you can add the following integer multiples to $s_1$ and $t_1$ so that the requirement is met:</p>\n<p>\\begin{align} <br/>s &amp;= s_1+\\lambda \\times \\frac{\\var{b}}{d} \\\\\\\\<br/>t &amp;= t_1-\\lambda \\times \\frac{\\var{a}}{d}<br/>\\end{align}</p>\n<p>You have to find the appropriate value of $\\lambda$ if the requirement is not met.</p>\n<p>You can easily check that it is still the case that $\\var{a}s+\\var{b}t=d$.</p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "marks": 0, "type": "information"}], "marks": 0, "scripts": {}, "showCorrectAnswer": true, "type": "gapfill"}], "statement": "", "variable_groups": [{"variables": ["g", "num_lines", "numbers", "a", "b"], "name": "Setup"}, {"variables": ["d", "diff", "s", "t", "multiple", "show_diff"], "name": "Intermediate"}, {"variables": ["sval", "tval"], "name": "Answers"}], "variablesTest": {"maxRuns": 100, "condition": ""}, "preamble": {"css": "", "js": ""}, "variables": {"a": {"definition": "numbers[0]", "templateType": "anything", "group": "Setup", "name": "a", "description": ""}, "b": {"definition": "numbers[1]", "templateType": "anything", "group": "Setup", "name": "b", "description": ""}, "multiple": {"definition": "(sval-s)/diff", "templateType": "anything", "group": "Intermediate", "name": "multiple", "description": "<p>Multiple of diff to add to s to get a value in the range $(0,...diff-1)$</p>"}, "d": {"definition": "gcd(a,b)", "templateType": "anything", "group": "Intermediate", "name": "d", "description": ""}, "g": {"definition": "random(1..20)", "templateType": "anything", "group": "Setup", "name": "g", "description": "<p>GCD of a and b</p>"}, "show_diff": {"definition": "random(sval+1..diff)", "templateType": "anything", "group": "Intermediate", "name": "show_diff", "description": ""}, "tval": {"definition": "t-multiple*a/d", "templateType": "anything", "group": "Answers", "name": "tval", "description": ""}, "sval": {"definition": "mod(s,diff)", "templateType": "anything", "group": "Answers", "name": "sval", "description": ""}, "t": {"definition": "extendedgcd2(max(a,b),min(a,b))", "templateType": "anything", "group": "Intermediate", "name": "t", "description": ""}, "s": {"definition": "extendedgcd1(max(a,b),min(a,b))", "templateType": "anything", "group": "Intermediate", "name": "s", "description": ""}, "numbers": {"definition": "long_gcd(g*random(2..10),g,num_lines)", "templateType": "anything", "group": "Setup", "name": "numbers", "description": ""}, "diff": {"definition": "b/d", "templateType": "anything", "group": "Intermediate", "name": "diff", "description": ""}, "num_lines": {"definition": "random(3..5#1)", "templateType": "randrange", "group": "Setup", "name": "num_lines", "description": "<p>Number of lines in the Euclidean algorithm for a and b.</p>"}}, "metadata": {"notes": "<p>The functions to generate the tables in the Advice could be done a lot better using the new HTML data type, but they do work.</p>", "description": "<p>Given two numbers, find the gcd, then use Euclids&nbsp;algorithm to find $s$ and $t$ such that $as+bt=\\operatorname{gcd}(a,b)$.&nbsp;</p>", "licence": "Creative Commons Attribution 4.0 International"}}, {"functions": {}, "name": "CPS2.1", "tags": ["Arithmetic", "Modular arithmetic", "arithmetic", "mod", "modular arithmetic", "modulo", "remainder algorithm for integers", "statistics", "tested1"], "advice": "\n    <p>a) We seek a number \\[r=\\var{a} \\mod \\var{n} \\Rightarrow \\var{a}=m\\var{n}+r\\]</p>\n  <p>where $m$ is a positive integer and $0 \\le r \\le \\var{n-1}$.</p>\n  <p>This is simply achieved by dividing $\\var{a}$ by $\\var{n}$ and we find that:</p>\n  <p>\\[\\begin{eqnarray*} \\frac{\\var{a}}{\\var{n}}&amp;=&amp;\\var{m}+\\frac{\\var{r}}{\\var{n}}\\\\ \\Rightarrow \\var{a}&amp;=&amp;\\var{m}\\times \\var{n}+\\var{r} \\end{eqnarray*} \\] on multiplying through by $\\var{n}$.</p>\n  <p>Hence $r=\\var{r}$ and $\\var{a} \\mod \\var{n}=\\var{r}$.</p>\n  <p>You can use your calculator to find this as follows:</p>\n  <p>Divide $\\var{a}$ by $\\var{n}$ to get</p>\n  <p>\\[\\frac{\\var{a}}{\\var{n}}=\\var{a/n}=\\var{m}+\\var{a/n-m}\\]</p>\n  <p>Then multiplying $\\var{a/n-m}$ by $\\var{n}$ gives the remainder i.e.</p>\n  <p>$\\var{a/n-m}\\times \\var{n} = \\var{r}$.</p>\n  <p>This must be an integer and the calculator result will be an integer or very close to an integer &ndash; so you need to round to the integer in that case.</p>\n  <p>b)<br/>As in a)</p>\n  <p>\\[\\frac{\\var{a1}}{\\var{n1}}=\\var{m1}+\\frac{\\var{r1}}{\\var{n1}}\\]<br/>So $\\var{a1} \\mod \\var{n1} = \\var{r1}$</p>\n  <p>c)</p>\n  <p>\\[\\frac{\\var{a2}}{\\var{n2}}=\\var{m2}+\\frac{\\var{r2}}{\\var{n2}}\\]<br/>So $\\var{a2} \\mod \\var{n2} = \\var{r2}$</p>\n    \n    ", "rulesets": {"std": ["all", "fractionNumbers", "!collectNumbers", "!noLeadingMinus"]}, "parts": [{"type": "gapfill", "gaps": [{"marks": 1.0, "type": "numberentry", "maxvalue": "{r}", "minvalue": "{r}"}, {"marks": 1.0, "type": "numberentry", "maxvalue": "{r1}", "minvalue": "{r1}"}, {"marks": 1.0, "type": "numberentry", "maxvalue": "{r2}", "minvalue": "{r2}"}], "prompt": "\n        \n        \n        <p>a) $\\var{a} \\mod\\;\\var{n}=\\;\\;$[[0]]</p>\n        \n        \n        \n        <p>b) $\\var{a1} \\mod\\;\\var{n1}=\\;\\;$[[1]]</p>\n        \n        \n        \n        <p>c) $\\var{a2} \\mod\\;\\var{n2}=\\;\\;$[[2]]</p>\n        \n        \n        \n        ", "marks": 0.0}], "extensions": [], "statement": "<p>Find the following numbers modulo the given number $n$.</p>", "variable_groups": [], "progress": "ready", "type": "question", "variables": {"a": {"definition": "m*n+r", "name": "a"}, "r1": {"definition": "random(20..99)", "name": "r1"}, "r2": {"definition": "random(10..19)", "name": "r2"}, "m": {"definition": "random(5,6,7,8,9,11,12,13)", "name": "m"}, "n": {"definition": "random(6,7,8,9,11,12,13,14,15,16,17,18,19)", "name": "n"}, "a1": {"definition": "m1*n1+r1", "name": "a1"}, "r": {"definition": "random(1..5)", "name": "r"}, "m1": {"definition": "random(3,4,5,6)", "name": "m1"}, "m2": {"definition": "random(2,3,4)", "name": "m2"}, "n1": {"definition": "random(1001..1999#2)", "name": "n1"}, "n2": {"definition": "random(301..999#2)", "name": "n2"}, "a2": {"definition": "m2*n2+r2", "name": "a2"}}, "metadata": {"notes": "\n        \t\t<p><strong>11/07/2012:</strong></p>\n        \t\t    <p><strong><br /></strong>Added tags.</p>\n        \t\t    <p>Calculation checked.</p>\n        \t\t    <p><strong>24/07/2012:</strong></p>\n        \t\t    <p>Added description.</p>\n        \t\t    <p><strong>3/08/2012:</strong></p>\n        \t\t    <p>In the Advice section, moved \\Rightarrow to the beginning of the line instead of the end of the previous line.</p>\n        \t\t    <p>Question appears to be working correctly.</p>\n        \t\t    <p><strong>20/12/2012:</strong></p>\n        \t\t    <p>Changed marks from 0.5 for each part to 1 for each part.</p>\n        \t\t    <p>Could replace the variables using the mod function which is available, also use except for the random variable values. But not for now, calculations checked.</p>\n        \t\t    <p>Added tag tested1.</p>\n        \t\t", "description": "<p>Modular arithmetic. Find the following numbers modulo the given number $n$. Three examples to do.</p>", "licence": "Creative Commons Attribution 4.0 International"}}, {"functions": {"extendedgcd1": {"definition": "\nif((a|b) or (b|a),\n\n0\n\n,\n\nextendedgcd2(b,mod(a,b))\n\n)", "type": "number", "parameters": [["a", "number"], ["b", "number"]], "language": "jme"}, "extendedgcd2": {"definition": "\nif((a|b) or (b|a),\n\n1\n\n,\n\nextendedgcd1(b,mod(a,b))-(extendedgcd2(b,mod(a,b))*floor(a/b))\n\n)", "type": "number", "parameters": [["a", "number"], ["b", "number"]], "language": "jme"}, "posmod": {"definition": "if(s>0,\n       s\n,\n       s +b\n)  \n ", "type": "number", "parameters": [["s", "number"], ["b", "number"]], "language": "jme"}}, "ungrouped_variables": ["a1", "b1", "d1", "a", "b", "d", "s", "t", "inv"], "name": "Multiplicative Inverse", "tags": [], "advice": "", "rulesets": {}, "parts": [{"prompt": "<p>Find the gcd of&nbsp;$\\var{a}$ and $\\var{b}$</p>\n<p>gcd($\\var{a},\\var{b}$) = [[1]]</p>\n<p>Find $s$ and $t$ such that $ s (\\var{b}) + t (\\var{a}) = \\text{gcd}(\\var{a},\\var{b})$</p>\n<p>$s=$[[2]] &nbsp; $t=$[[3]]</p>\n<p>Hence find&nbsp;the multiplicative inverse of $\\var{a}$ in $\\mathbb{Z}_{\\var{b}}$</p>\n<p>$\\var{(a)}^{-1}=$ [[0]]</p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "gaps": [{"integerPartialCredit": 0, "integerAnswer": true, "allowFractions": false, "variableReplacements": [], "maxValue": "inv", "minValue": "inv", "variableReplacementStrategy": "originalfirst", "correctAnswerFraction": false, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "type": "numberentry"}, {"allowFractions": false, "variableReplacements": [], "maxValue": "d", "minValue": "d", "variableReplacementStrategy": "originalfirst", "correctAnswerFraction": false, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "type": "numberentry"}, {"allowFractions": false, "variableReplacements": [], "maxValue": "s", "minValue": "s", "variableReplacementStrategy": "originalfirst", "correctAnswerFraction": false, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "type": "numberentry"}, {"allowFractions": false, "variableReplacements": [], "maxValue": "t", "minValue": "t", "variableReplacementStrategy": "originalfirst", "correctAnswerFraction": false, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "type": "numberentry"}], "showCorrectAnswer": true, "scripts": {}, "marks": 0, "type": "gapfill"}], "statement": "", "variable_groups": [], "variablesTest": {"maxRuns": 100, "condition": ""}, "preamble": {"css": "", "js": ""}, "variables": {"a": {"definition": "a1/d1", "templateType": "anything", "group": "Ungrouped variables", "name": "a", "description": ""}, "b": {"definition": "b1/d1", "templateType": "anything", "group": "Ungrouped variables", "name": "b", "description": ""}, "d": {"definition": "gcd(a,b)", "templateType": "anything", "group": "Ungrouped variables", "name": "d", "description": ""}, "inv": {"definition": "posmod(t,max(a,b))", "templateType": "anything", "group": "Ungrouped variables", "name": "inv", "description": ""}, "a1": {"definition": "random(10..50)", "templateType": "anything", "group": "Ungrouped variables", "name": "a1", "description": ""}, "s": {"definition": "extendedgcd1(max(a,b),min(a,b))", "templateType": "anything", "group": "Ungrouped variables", "name": "s", "description": ""}, "t": {"definition": "extendedgcd2(max(a,b),min(a,b))", "templateType": "anything", "group": "Ungrouped variables", "name": "t", "description": ""}, "d1": {"definition": "gcd(a1,b1)\n", "templateType": "anything", "group": "Ungrouped variables", "name": "d1", "description": ""}, "b1": {"definition": "random(51..200)\n", "templateType": "anything", "group": "Ungrouped variables", "name": "b1", "description": ""}}, "metadata": {"notes": "<p>Not tested</p>", "description": "", "licence": "None specified"}}, {"functions": {"mod_set": {"definition": "//returns all integers which are divisible by c betweeen a and b\nvar l=[];\nfor(var i=a;i<b+1;i++) \n{ if (i%c==0){l.push(i);}\n}\nreturn l;\n", "type": "list", "parameters": [["a", "number"], ["b", "number"], ["c", "number"]], "language": "javascript"}}, "ungrouped_variables": ["a", "b", "c", "d", "f", "universal", "set1", "set2", "set3"], "name": "set3 ", "tags": ["complement", "elements", "intersection", "predicates", "set operations", "sets", "subsets", "union"], "advice": "", "rulesets": {}, "parts": [{"prompt": "<p>Enumerate the following sets:</p>\n<p>a) $A \\cap B=\\;$[[0]]</p>\n<p>b) $B \\cap C=\\;$[[1]]</p>\n<p>c) $A \\cap \\overline{C}=\\;$[[2]]</p>\n<p>d) $(\\overline{A} \\cup C) \\cap B=\\;$[[3]]</p>\n<p>e) $\\overline{A \\cup C} \\cap \\overline{B}=\\;$[[4]]</p>\n<p>f)&nbsp;$(A \\cup \\overline{B}) \\cap C=\\;$[[5]]</p>\n<p></p>\n<p>Note that you input sets in the form <code>set(a,b,c,..,z)</code> .</p>\n<p>For example <code> set(1,2,3)</code>gives the set $\\{1,2,3\\}$.</p>\n<p>The empty set is input as&nbsp;<code>set()</code>.</p>\n<p>Also some labour saving tips:</p>\n<p>If you want to input all integers between $a$ and $b$ inclusive then instead of writing all the elements you can input this as <code>set(a..b)</code>.</p>\n<p>If you want to input all integers between $a$ and $b$ inclusive in steps of $c$ then this is input as <code>set(a..b#c)</code>. So all odd integers from $-3$ to $28$ are input as&nbsp;<code>set(-3..28#2).</code></p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "gaps": [{"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{set1 and set2}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}, {"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{set2 and set3}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}, {"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{set1 and (universal-set3)}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}, {"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{((universal-set1) or set3) and set2}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}, {"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{(universal-(set1 or set3)) and (universal-set2)}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}, {"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{(set1 or (universal-set2)) and set3}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "marks": 0, "type": "gapfill"}], "statement": "<p>In this question, the universal set is &nbsp;$\\mathcal{U}=\\{x \\in \\mathbb{N}\\; | \\;x \\leq \\var{a}\\}$.</p>\n<p>Let:</p>\n<p>$A=\\{x \\in \\mathbb{N}\\;|\\;\\var{b}\\leq x \\leq \\var{c}\\}$.</p>\n<p>$B=\\{x \\in \\mathbb{N}\\;|\\;x \\gt \\var{d}\\}$.</p>\n<p>$C=\\{ x \\in \\mathbb{N}\\;|\\; x \\text{ divisible by } \\var{f}\\}$.</p>\n<p></p>\n<p></p>", "variable_groups": [], "variablesTest": {"maxRuns": 100, "condition": ""}, "preamble": {"css": "", "js": ""}, "variables": {"a": {"definition": "random(15..30)", "templateType": "anything", "group": "Ungrouped variables", "name": "a", "description": ""}, "c": {"definition": "b+random(10..a-b)", "templateType": "anything", "group": "Ungrouped variables", "name": "c", "description": ""}, "b": {"definition": "random(3..8)", "templateType": "anything", "group": "Ungrouped variables", "name": "b", "description": ""}, "d": {"definition": "random(5..c-1)", "templateType": "anything", "group": "Ungrouped variables", "name": "d", "description": ""}, "f": {"definition": "random(2,3,5,6)", "templateType": "anything", "group": "Ungrouped variables", "name": "f", "description": ""}, "universal": {"definition": "set(1..a)", "templateType": "anything", "group": "Ungrouped variables", "name": "universal", "description": ""}, "set1": {"definition": "set(b..c)", "templateType": "anything", "group": "Ungrouped variables", "name": "set1", "description": ""}, "set2": {"definition": "set(d+1..a)", "templateType": "anything", "group": "Ungrouped variables", "name": "set2", "description": ""}, "set3": {"definition": "set(mod_set(1,a,f))", "templateType": "anything", "group": "Ungrouped variables", "name": "set3", "description": ""}}, "metadata": {"notes": "", "description": "<p>Given some random finite subsets of the natural numbers, perform set operations $\\cap,\\;\\cup$ and complement.</p>", "licence": "Creative Commons Attribution 4.0 International"}}, {"functions": {"mod_set": {"definition": "//returns all integers which are divisible by c betweeen a and b\nvar l=[];\nfor(var i=a;i<b+1;i++) \n{ if (i%c==0){l.push(i);}\n}\nreturn l;\n", "type": "list", "parameters": [["a", "number"], ["b", "number"], ["c", "number"]], "language": "javascript"}}, "ungrouped_variables": ["set1", "set2", "set3", "set4", "set5", "set6", "set7", "set8", "set10", "set11", "set12", "set14", "set15", "set16"], "name": "set5 - Cartesian Products", "tags": [], "advice": "<h4>a)</h4>\n<p>$A \\times B$ is the set of all pairs $(a,b)$, where $a \\in A$ and $b \\in B$.</p>\n<h4>b)</h4>\n<p>$B \\cap D$ is the set of all elements present in both $B$ and $D$, i.e. $\\var{set2 and set5}$.</p>\n<p>$A \\cap C$ is the set of all elements present in both $A$ and $C$, i.e. $\\var{set1 and set4}$.</p>\n<p>$(B\\cap D)\\times (A\\cap C)$ is the set of pairs of&nbsp;all pairs $(x,y)$, where $x \\in B \\cap D$ and $y \\in A \\cap C$.</p>\n<h4>c)</h4>\n<p>$(A\\cap C)\\times (A\\cap C)\\times (C\\cap D)$ is the set of all triples $(x,y,z)$, where $x \\in A \\cap C$, $y \\in A \\cap C$ and $z \\in C \\cap D$. Note that $x$ and $y$&nbsp;do not have to be different.</p>\n<h4>d)</h4>\n<p>$A-C$ is the set of all elements present in $A$ but not in $C$, i.e. $\\var{set1-set4}$.</p>\n<p>$C-A$ is the set of all elements present in $C$ but not in $A$, i.e. $\\var{set4-set1}$.</p>\n<p>$(A-C) \\cup (C-A)$ is the set of all elements which are either in $A-C$, or in &nbsp;$C-A$, so $(A-C) \\cup (C-A) = \\var{(set1-set4) or (set4-set1)}$.</p>\n<h4>e)</h4>\n<p>$(A \\times D)$ is the set of all pairs of elements $(a,d)$, with $a \\in A$ and $d \\in D$,&nbsp;i.e. $\\var{set(product(list(set1),list(set5)))}$.</p>\n<p>$C \\times B)$ is the set of all pairs of elements $(c,b)$, with $c \\in C$ and $b \\in B$, i.e. $\\var{set(product(list(set4),list(set2)))}$.</p>\n<p>$(A \\times D) \\cap (C \\times B)$ is the set of all pairs present in both of the previous sets.</p>\n<h4>f)</h4>\n<p>$C \\cap D$ is the set of all elements in both $C$ and in $D$, so $C \\cap D = \\var{set(set4 and set5)}$.</p>\n<p>$C - D$ is the set of all elements in $C$ and not in $D$, so $C-D = \\var{set(set4 - set5)}$.</p>\n<p>$(C \\cap D) \\times (C - D)$ is the set of all pairs of elements $(x,y)$, where $x$ is in $C \\cap D$ and $y$ is in $C - D$, so $C \\cap D) \\times (C-D) = \\var{set(product(list(set4 and set5),list(set4 - set5)))}$.</p>\n<p>Similarly, $(D - C) \\times (C \\cap D) = \\var{set(product(list(set5-set4),list(set4 and set5)))}$.</p>\n<p>Finally, $[(C \\cap D) \\times (C - D)] \\cup [(D - C) \\times (C \\cap D)]$ is the set of all pairs present in either of the above sets, i.e. $\\var{set16}$.</p>", "rulesets": {}, "parts": [{"prompt": "<p>$A \\times B=\\;$[[0]]</p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "gaps": [{"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{set3}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "marks": 0, "type": "gapfill"}, {"prompt": "<p>$(B\\cap D)\\times (A\\cap C)=\\;$[[0]]</p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "gaps": [{"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{set6}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "marks": 0, "type": "gapfill"}, {"prompt": "<p>$(A\\cap C)\\times (A\\cap C)\\times (C\\cap D)=\\;$[[0]]</p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "gaps": [{"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{set10}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "marks": 0, "type": "gapfill"}, {"prompt": "<p>$[(A - C)\\cup (C-A)]\\times [(B-D)\\cup(D-B)]=\\;$[[0]]</p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "gaps": [{"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{set14}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "marks": 0, "type": "gapfill"}, {"prompt": "<p>$(A\\times D)\\cap (C\\times B)=\\;$[[0]]</p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "gaps": [{"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{set15}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "marks": 0, "type": "gapfill"}, {"prompt": "<p>$[(C\\cap D)\\times (C-D)]\\cup [(D-C)\\times (C\\cap D)]=\\;$[[0]]</p>", "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "gaps": [{"vsetrangepoints": 5, "expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "showCorrectAnswer": true, "scripts": {}, "answer": "{set16}", "marks": 1, "checkvariablenames": false, "checkingtype": "absdiff", "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "marks": 0, "type": "gapfill"}], "statement": "<p>Let $A=\\var{set1}$,&nbsp; let&nbsp; $B=\\var{set2}$, let&nbsp; $C=\\var{set4}$ and let $D=\\var{set5}$.</p>\n<p>List the elements of the following sets.</p>\n<p>Input sets in the form <code>set(a,b,c,d)</code> .</p>\n<p>For example <code> set(1,2,3)&nbsp;</code>gives the set $\\{1,2,3\\}$.</p>\n<p>Element $(a,b)$ of a Cartesian product is entered, and represented, as $[a,b]$.</p>\n<p>For example <code> set([1,1],[1,2],[2,3])</code>gives the set $\\{[1,1], [1,2], [2,3]\\}$.</p>\n<p>The empty set is input as&nbsp;<code>set()</code>.</p>", "variable_groups": [{"variables": ["a", "b"], "name": "Random numbers"}, {"variables": ["list1", "list2", "list4", "list5", "list9", "list10", "list_extra"], "name": "Lists"}], "variablesTest": {"maxRuns": 100, "condition": ""}, "preamble": {"css": "", "js": ""}, "variables": {"list9": {"definition": "product(product(list(set7),list(set7)),list(intersection(set4,set5)))", "templateType": "anything", "group": "Lists", "name": "list9", "description": ""}, "list5": {"definition": "shuffle(list2)[0..b-1]+list_extra", "templateType": "anything", "group": "Lists", "name": "list5", "description": ""}, "list_extra": {"definition": "[random(21..24)]", "templateType": "anything", "group": "Lists", "name": "list_extra", "description": ""}, "list1": {"definition": "shuffle(list(1..20))[0..a]", "templateType": "anything", "group": "Lists", "name": "list1", "description": ""}, "list2": {"definition": "shuffle(list(25..100#5))[0..b]", "templateType": "anything", "group": "Lists", "name": "list2", "description": ""}, "set4": {"definition": "set(list4)", "templateType": "anything", "group": "Ungrouped variables", "name": "set4", "description": ""}, "set5": {"definition": "set(list5)", "templateType": "anything", "group": "Ungrouped variables", "name": "set5", "description": ""}, "set6": {"definition": "set(product(list(set8),list(set7)))", "templateType": "anything", "group": "Ungrouped variables", "name": "set6", "description": ""}, "set7": {"definition": "intersection(set1,set4)", "templateType": "anything", "group": "Ungrouped variables", "name": "set7", "description": ""}, "set1": {"definition": "set(list1)", "templateType": "anything", "group": "Ungrouped variables", "name": "set1", "description": ""}, "set2": {"definition": "set(list2)", "templateType": "anything", "group": "Ungrouped variables", "name": "set2", "description": ""}, "list4": {"definition": "shuffle(list1)[0..a-1]+list_extra", "templateType": "anything", "group": "Lists", "name": "list4", "description": ""}, "set8": {"definition": "intersection(set2,set5)", "templateType": "anything", "group": "Ungrouped variables", "name": "set8", "description": ""}, "a": {"definition": "random(2..3)", "templateType": "anything", "group": "Random numbers", "name": "a", "description": ""}, "set3": {"definition": "set(product(list1,list2))", "templateType": "anything", "group": "Ungrouped variables", "name": "set3", "description": ""}, "b": {"definition": "5-a", "templateType": "anything", "group": "Random numbers", "name": "b", "description": ""}, "set16": {"definition": "union(set(product(list(intersection(set4,set5)),list(set4-set5))),set(product(list(set5-set4),list(intersection(set4,set5)))))", "templateType": "anything", "group": "Ungrouped variables", "name": "set16", "description": ""}, "set14": {"definition": "set(product(list(set11),list(set12)))", "templateType": "anything", "group": "Ungrouped variables", "name": "set14", "description": ""}, "set15": {"definition": "intersection(set(product(list1,list5)),set(product(list4,list2)))", "templateType": "anything", "group": "Ungrouped variables", "name": "set15", "description": ""}, "set12": {"definition": "union(set2-set5,set5-set2)", "templateType": "anything", "group": "Ungrouped variables", "name": "set12", "description": ""}, "set10": {"definition": "set(list10)", "templateType": "anything", "group": "Ungrouped variables", "name": "set10", "description": ""}, "set11": {"definition": "union(set1-set4,set4-set1)", "templateType": "anything", "group": "Ungrouped variables", "name": "set11", "description": ""}, "list10": {"definition": "map(list9[x][0]+list9[x][1],x,0..len(list9)-1)", "templateType": "anything", "group": "Lists", "name": "list10", "description": ""}}, "metadata": {"notes": "", "description": "", "licence": "Creative Commons Attribution 4.0 International"}}, {"functions": {}, "name": "Solving Log Equations", "tags": [], "preamble": {"css": "", "js": ""}, "advice": "", "rulesets": {}, "parts": [{"prompt": "<p>$\\log x^{\\var{a}}-\\log x^{\\var{a-1}} = \\log\\var{c}x - \\log\\var{d}x$</p>\n<p>$x = $ [[0]]</p>", "marks": 0, "gaps": [{"expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "answer": "{c}/{d}", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "type": "gapfill"}, {"prompt": "<p>$\\var{f}^{\\simplify{x+{g}}} = \\var{h}^{\\simplify{{j}x+{k}}}$</p>\n<p>$x = $ [[0]]</p>\n<p>Answer in terms of logs, being sure to write $\\log5$ as log(5).</p>", "marks": 0, "gaps": [{"expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "answer": "({k}*log {h} - {g}*log{f})/(log{f}-{j}*log{h})", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "type": "gapfill"}, {"prompt": "<p>$\\frac{1}{3^{\\var{m}(x-2)}}=3^{\\var{l}(2x-4)}$</p>\n<p>$x = $[[0]]</p>", "marks": 0, "gaps": [{"expectedvariablenames": [], "checkingaccuracy": 0.001, "type": "jme", "showpreview": true, "vsetrangepoints": 5, "showCorrectAnswer": true, "scripts": {}, "marks": 1, "answer": "(2{m}+4{l})/(2{l}+{m})", "checkingtype": "absdiff", "checkvariablenames": false, "vsetrange": [0, 1]}], "showCorrectAnswer": true, "scripts": {}, "type": "gapfill"}], "statement": "<p>Solve for x:</p>", "variable_groups": [], "progress": "in-progress", "type": "question", "variables": {"a": {"definition": "random(3..5)", "templateType": "anything", "group": "Ungrouped variables", "name": "a", "description": ""}, "c": {"definition": "random(1..9)", "templateType": "anything", "group": "Ungrouped variables", "name": "c", "description": ""}, "d": {"definition": "random(1..9 except c)", "templateType": "anything", "group": "Ungrouped variables", "name": "d", "description": ""}, "g": {"definition": "random(1..9 except f)", "templateType": "anything", "group": "Ungrouped variables", "name": "g", "description": ""}, "f": {"definition": "random(2..8)", "templateType": "anything", "group": "Ungrouped variables", "name": "f", "description": ""}, "h": {"definition": "random(2..8 except f except g except f^(1/2) except f^(1/3))", "templateType": "anything", "group": "Ungrouped variables", "name": "h", "description": ""}, "k": {"definition": "random(1..9 except f except g except h except j)", "templateType": "anything", "group": "Ungrouped variables", "name": "k", "description": ""}, "j": {"definition": "random(2..4 except f except g except h)", "templateType": "anything", "group": "Ungrouped variables", "name": "j", "description": ""}, "m": {"definition": "random(2..5 except l)", "templateType": "anything", "group": "Ungrouped variables", "name": "m", "description": ""}, "l": {"definition": "random(2..5)", "templateType": "anything", "group": "Ungrouped variables", "name": "l", "description": ""}}, "metadata": {"notes": "", "description": ""}}], "percentPass": 0, "timing": {"allowPause": false, "timeout": {"action": "none", "message": ""}, "timedwarning": {"action": "none", "message": ""}}, "pickQuestions": 0, "navigation": {"onleave": {"action": "none", "message": ""}, "reverse": true, "allowregen": false, "showresultspage": true, "preventleave": true, "browse": true, "showfrontpage": true}, "resources": [], "feedback": {"showtotalmark": false, "advicethreshold": 0, "showanswerstate": true, "showactualmark": true, "allowrevealanswer": false}}